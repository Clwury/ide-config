{
  "editor.fontFamily": "Maple Mono Normal NF CN, JetBrainsMono Nerd Font, monospace, Consolas, 'Courier New', '微软雅黑'",
  "editor.fontSize": 18,
  "editor.fontVariations": false,
  "editor.lineHeight": 30,
  "editor.fontWeight": "normal",
  "editor.unicodeHighlight.allowedLocales": {
    "zh-hant": true
  },
  "editor.stickyScroll.enabled": true,
  "editor.linkedEditing": true,
  "editor.suggest.insertMode": "replace",
  "editor.suggest.snippetsPreventQuickSuggestions": false,
  "editor.tabSize": 2,
  "editor.lineNumbers": "relative",
  "editor.renderWhitespace": "boundary",
  "editor.cursorSurroundingLines": 5,
  "editor.gotoLocation.multipleDeclarations": "goto",
  "editor.gotoLocation.multipleDefinitions": "goto",
  "editor.gotoLocation.multipleImplementations": "goto",
  "editor.gotoLocation.multipleReferences": "goto",
  "editor.gotoLocation.multipleTypeDefinitions": "goto",
  "workbench.tree.indent": 16,
  "workbench.tree.renderIndentGuides": "always",
  "workbench.colorTheme": "Catppuccin Macchiato",
  "workbench.iconTheme": "material-icon-theme",
  // "workbench.colorCustomizations": {
  //   // "editorCursor.background": "#D3C6AA",
  //   // Everforest Light
  //   // "editorCursor.background": "#8DA101",
  //   // "editorCursor.background": "#A7C080",
  //   // latte
  //   // "editorCursor.background": "#dc8a78",
  //   // macchiato
  //   "editorCursor.background": "#f4dbd6",
  // },
  // "http.proxyAuthorization": null,
  // "http.proxyStrictSSL": true,
  // "workbench.settings.editor": "json",
  // "workbench.settings.useSplitJSON": true,
  // vim
  "vim.easymotion": true,
  "vim.useSystemClipboard": true,
  "vim.hlsearch": true,
  "vim.highlightedyank.enable": true,
  "vim.leader": "<space>",
  "vim.foldfix": true,
  "vim.sneak": true,
  "vim.sneakUseIgnorecaseAndSmartcase": true,
  "vim.replaceWithRegister": true,
  "vim.showMarksInGutter": true,
  "vim.normalModeKeyBindingsNonRecursive": [
    {
      "before": ["H"],
      "after": ["^"]
    },
    {
      "before": ["L"],
      "after": ["$"]
    },
    {
      "before": ["Y"],
      "after": ["y", "$"]
    },
    {
      "before": ["K"],
      "commands": ["lineBreakInsert"],
      "silent": true
    },
    {
      "before": ["<leader>", "n"],
      "commands": [":noh"]
    },
    {
      "before": ["<C-[>"],
      "commands": ["editor.emmet.action.matchTag"]
    }
  ],
  "vim.visualModeKeyBindingsNonRecursive": [
    {
      "before": ["H"],
      "after": ["^"]
    },
    {
      "before": ["L"],
      "after": ["$"]
    }
  ],
  "vim.normalModeKeyBindings": [
    {
      "before": ["<C-h>"],
      "commands": ["workbench.action.previousEditor"]
    },
    {
      "before": ["<C-l>"],
      "commands": ["workbench.action.nextEditor"]
    },
    {
      "before": ["<leader>", "w"],
      "commands": [":w!"]
    },
    {
      "before": ["<leader>", "q"],
      "commands": [":q!"]
    },
    {
      "before": ["<leader>", "x"],
      "commands": [":x!"]
    },
    {
      "before": ["<leader>", "e"],
      "commands": ["workbench.action.toggleSidebarVisibility"]
    },
    {
      "before": ["<leader>", "o"],
      "commands": ["workbench.files.action.focusFilesExplorer"]
    },
    {
      "before": ["[", "d"],
      "commands": ["editor.action.marker.prevInFiles"]
    },
    {
      "before": ["]", "d"],
      "commands": ["editor.action.marker.nextInFiles"]
    },
    {
      "before": ["<leader>", "c", "a"],
      "commands": ["editor.action.quickFix"]
    },
    {
      "before": ["\\", "r"],
      "commands": ["editor.action.formatDocument"]
    }
  ],
  "vim.insertModeKeyBindings": [
    {
      "before": ["j", "j"],
      "after": ["<Esc>"]
    }
  ],
  "vim.handleKeys": {
    "<C-p>": false
  },
  "eslint.format.enable": true,
  "eslint.validate": [
    "javascript",
    "javascriptreact",
    "typescript",
    "typescriptreact",
    "vue",
    "html"
  ],
  "[jsonc]": {
    "editor.defaultFormatter": "vscode.json-language-features",
  },
  "[rust]": {
    "editor.defaultFormatter": "rust-lang.rust-analyzer"
  },
  "editor.formatOnSave": true
}
